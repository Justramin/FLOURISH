<!DOCTYPE html>
<html lang="en">

<%- include('../partials/head') %>





  <body>
    <div class="header--sidebar"></div>


    <%- include('../partials/navbar') %>



      <style>
        .container {
          margin-bottom: 5%;
        }

        body {
          font-family: Arial, sans-serif;
          background-color: #ffffff;
        }

        .cart-container {
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .card {
          border-radius: 15px;
          box-shadow: 0 14px 16px rgba(82, 79, 79, 0.1);
          /* width: 400px; */
          /* background-color: #c7c7c7;; */
        }

        .card-body {
          padding: 40px;
        }

        .card-body {
          background-color: #ffffff;
          /* Set the background color */
          border-radius: 10px;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
          /* Add the box shadow */
          padding: 20px;
          margin-bottom: 20px;
        }

        .card-title {
          color: address, daily body, black wall, shadow, danger, Nakoda#007bff;
          margin-bottom: 20px;
          text-align: center;
        }

        .form-label {
          font-weight: bold;
        }

        .form-control {
          border-radius: 5px;
          border: 1px solid #ced4da;
          color: black;
          margin-bottom: 15px;
          padding: 10px;
          width: 100%;
        }

        .text-danger {
          font-size: 14px;
          font-style: italic;
          color: red;
          margin-bottom: 10px;
        }

        .btn-primary {
          background-color: #19b22d;
          border: none;
          border-radius: 5px;
          padding: 10px 20px;
          cursor: pointer;
          width: 100%;
        }

        .btn-primary:hover {
          background-color: #0f8415;
        }
      </style>


      <div class="ps-hero bg--cover" data-background="/user/images/hero/bread-1.jpg">
        <div class="ps-container">
          <h3>Check out</h3>
          <div class="ps-breadcrumb">
            <ol class="breadcrumb">
              <li><a href="/">Home</a></li>
              <li class="active">Shopping cart</li>
              <li class="active">Check out</li>
            </ol>
          </div>
        </div>
      </div>


      <div class="ps-checkout">
        <div class="ps-container">
          <form class="ps-form--checkout" action="/newAddressCheckOut" method="post">
            <div class="row">
              <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 ">
                <div class="ps-checkbox custom-control custom-checkbox">
                  <input class="form-control" type="checkbox" id="cb01">
                  <label for="cb01" style="font-weight: 800;font-size: larger;" data-toggle="collapse"
                    data-target="#shipping-address">Create an new Billing Details?</label>
                </div>
                <div class="ps-checkout__billing collapse" id="shipping-address">
                  <form action="/addaddressPost" id="addressForm" method="POST" onsubmit="return validateAddress()">


                    <div class="form-group">
                      <label for="fullname" class="form-label">Full Name</label>
                      <input type="text" id="fullname" name="name" class="form-control">
                      <span id="fullnameError" class="text-danger"></span>
                    </div>

                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" id="email" name="email" class="form-control">
                        <span id="emailError" class="text-danger"></span>
                      </div>
                      <div class="col-md-6 mb-3">
                        <label for="adname" class="form-label">House Name / Flat No</label>
                        <input type="text" id="adname" name="housename" class="form-control">
                        <span id="adnameError" class="text-danger"></span>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="street" class="form-label">Street</label>
                        <input type="text" id="street" name="street" class="form-control">
                        <span id="streetError" class="text-danger"></span>
                      </div>
                      <div class="col-md-6 mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="number" id="pincode" name="pincode" class="form-control">
                        <span id="pincodeError" class="text-danger"></span>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" id="city" name="city" class="form-control">
                        <span id="cityError" class="text-danger"></span>
                      </div>
                      <div class="col-md-6 mb-3">
                        <label for="state" class="form-label">State</label>
                        <select id="state" name="state" class="form-control" required>
                          <option value="" disabled selected>Select a state</option>
                          <option value="Kerala">Kerala</option>
                          <option value="Karnataka">Karnataka</option>
                          <option value="TamilNadu">Tamil Nadu</option>
                        </select>
                        <span id="stateError" class="text-danger"></span>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <label for="country" class="form-label">Country</label>
                        <select id="country" name="country" class="form-control" required>
                          <option value="India">India</option>
                        </select>
                        <span id="countryError" class="text-danger"></span>
                      </div>
                      <div class="col-md-6 mb-3">
                        <label for="mobile" class="form-label">Phone Number</label>
                        <input type="number" id="mobile" name="mobile" class="form-control">
                        <span id="mobileError" class="text-danger"></span>
                      </div>
                    </div>
                    <div class="form-group">
                      <label for="saveas" class="form-label">Save as</label>
                      <select id="saveas" name="saveas" class="form-control" required>
                        <option value="" disabled selected>Choose One</option>
                        <option value="Home">Home</option>
                        <option value="WorkSpace">Work Space</option>
                      </select>
                      <span id="saveasError" class="text-danger"></span>
                    </div>
                    <div class="form-group text-center">
                      <button id="saveChangesButton" class="btn btn-primary" type="submit">Add Address</button>
                    </div>


                  </form>
                </div>
                <div class="row" style="display: flex; ">


                  <% if (address) { %>
                    <!-- <div > -->
                    <% for( let i=0; i < address.address.length; i++ ) { %>

                      <div class="card" style="width: 400px;margin-right: 5%;">
                        <div class="card-body">
                          <div class="">
                            <input type="radio" onclick="selectAddress('<%= i %>')" name="name">
                            <label style="font-weight: 800;font-size: larger;">Select</label>
                          </div>
                          <h5 class="card-title">Address of <%= address.address[i].save_as %>
                          </h5>
                          <h6 class="card-subtitle mb-2 text-body-secondary">
                            <%= address.address[i].name %>
                          </h6>
                          <p class="card-text">
                            <%= address.address[i].housename %> ,<%= address.address[i].street %>
                          </p>
                          <p class="card-text">
                            <%= address.address[i].city %> ,<%= address.address[i].state %>
                          </p>
                          <p class="card-text">Pincode: <%= address.address[i].pincode %>
                          </p>
                          <p class="card-text">Mobile: <%= address.address[i].mobile %>
                          </p>
                          <div class="mb-4">
                            <a class="btn btn-warning" href="/checkOutEditeAddress/<%= i %>"> Edit </a>
                            <a class="btn btn-success" onclick="delAddress('<%= i %>')">Delete</a>
                          </div>
                        </div>

                      </div>

                      <% } %>

                        <% } %>








                          <!-- </div> -->


                </div>

              </div>

              <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12 ">
                <div class="ps-checkout__order">
                  <header>
                    <h3 style="text-align: center;">Your Order</h3>
                  </header>
                  <div class="content">
                    <table class="table ps-checkout__products">
                      <thead>
                        <tr>
                          <th class="text-uppercase">si: No</th>
                          <th class="text-uppercase">Product</th>
                          <th class="text-uppercase">Quantity</th>
                          <th class="text-uppercase">Total</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% for( let i=0; i < data.items.length; i++ ) { %>

                          <tr>
                            <td><%= i+1 %></td>
                            <td><%= data.items[i].productId.productName %></td>
                            <td><%= data.items[i].quantity %></td>
                            <td>:<%= data.items[i].Product_total %></td>
                          </tr>

                          <% } %>
                            <table class="table ps-checkout__products">
                              <thead>
                                <tr>
                                  <th class="text-uppercase">Total</th>
                                  <th class="text-uppercase"> <span id="cart_total"><%= data.Cart_total %></span></th>
                                  </tr>
                              </thead>
                              <!-- 
                            <td>Card Subtitle</td>
                            <td>$300.00</td>
                          </tr>
                          <tr>
                            <td>Order Total</td>
                            <td>$300.00</td>
                          </tr> -->
                      </tbody>
                    </table>
                    </table>
                  </div>





                  <div class="ps-form--icon"
                    style="margin-right: 100px; margin-left: 30px; border-radius: 160px; display: flex;">
                    <input class="form-control" type="text" id="coupon" placeholder="Promo Code"
                      style="border-radius: 60px; flex-grow: 1; margin-right: 10px;">
                    <button class="btn btn-success" style="height:46px;border-radius: 60px;text-align: center;justify-content: center;" onclick="applyCoupon()">Apply Coupon</button>
                  </div>




                  <div class="content">
                    <table class="table ps-checkout__products">
                      <thead>
                        <tr>
                          <th class="text-uppercase">Discount</th>
                          <th id="dicprice" class="text-uppercase">0</th>
                        </tr>
                      </thead>
                      <thead>
                        <tr>
                          <th class="text-uppercase">Final Price</th>
                          <th id="cartotal" class="text-uppercase"><%= data.Cart_total %></th>
                        </tr>
                      </thead>

                    </table>
                  </div>



                  <div class="content">
                    <table class="table ps-checkout__products">
                      <thead>
                        <tr>
                          <th class="text-uppercase">Wallet Balance </th>
                          <% if (wallet) { %>
                            <th id="wallet" class="text-uppercase"> <%= wallet.wallet %> </th>
                            <% } else { %>
                              <th id="wallet" class="text-uppercase"> 0</th>
                          <% } %>
                        </tr>
                      </thead>
                    </table>
                  </div>


                  <footer>
                    <h3>Payment Method</h3>
                    <div class="form-group cheque">
                      <div class="ps-radio ps-radio--small">
                        <input class="form-control" type="radio" id="rdo01" name="payment"
                          onclick="paymentMethod('COD')">
                        <label for="rdo01">COD</label>
                      </div>
                    </div>
                    <div class="form-group cheque">
                      <div class="ps-radio ps-radio--small">
                        <input class="form-control" type="radio" id="rdo02" name="payment"
                          onclick="paymentMethod('WALLET')">
                        <label for="rdo02">WALLET</label>
                      </div>
                    </div>
                    <div class="form-group paypal">
                      <div class="ps-radio ps-radio--small">
                        <input class="form-control" type="radio" name="payment" id="rdo03"
                          onclick="paymentMethod('RazorPay')">
                        <label for="rdo03">Razor Pay</label>
                      </div>
                      <ul class="ps-payment-method">
                        <li><a href="#"><img src="/user/images/payment/1.png" alt=""></a></li>
                        <li><a href="#"><img src="/user/images/payment/2.png" alt=""></a></li>
                        <li><a href="#"><img src="/user/images/payment/3.png" alt=""></a></li>
                      </ul>
                      <button class="ps-btn ps-btn--fullwidth" onclick="placeOrder()">Place Order</button>
                    </div>
                  </footer>
                </div>
                <!-- <div class="ps-shipping">
                    <h3>FREE SHIPPING</h3>
                    <p>YOUR ORDER QUALIFIES FOR FREE SHIPPING.<br> <a href="#"> Singup </a> for free shipping on every order, every time.</p>
                  </div> -->
              </div>



              <div class="form-group">
                <button class="ps-btn ps-btn--gray">Continue Shopping</button>
              </div>


            </div>
          </form>
        </div>
      </div>




      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

      <script>
        const finalPrice = document.getElementById('cartotal').innerText 
       
     
       
      
        let method = ''
        let index = -1
        function paymentMethod(payment) {
          method = payment
          console.log(payment)
        }






        //WALLET ANAKIL
        async function WALLET (){
          const walletAmount = document.getElementById('wallet').innerText
          console.log(walletAmount,'--------------walletAmount ahannu');
          await fetch('/userWalletPost',{
            method: 'POST',
            headers:{
              'Content-Type': 'application/json'
            },
            body:JSON.stringify({walletAmount:walletAmount,finalPrice:finalPrice})
          }).then(response=>{
            if(!response.ok){
              console.log('some error occured while fetching Wallet');
            }
            return response.json()
          }).then(data=>{
            if(data.result==='Within Limit'){
              orderUsingWallet(method)
              console.log('Within Limit');
            }else{
              console.log('Limit Exceeded');
              Swal.fire({
              title: "Limit Exceeded !",
              text: "Wallet doesn't have enough Money !",
              icon: "warning",
              showConfirmButton: false,
              timer: 2000
            });
            }
          }).catch(error=>{
            console.log('Some error occure', error);
          })






        }

        async function orderUsingWallet(){

await fetch(`/placeOrder?address=${index}&payment=${method}`,{
  method:'GET',
    headers:{
      'Content-Type': 'application/json'
    },
}) .then(response =>{
  if(!response.ok){
    console.log('some error aoccourd by fetching data in order get');
  }
  return response.json()
}).then(data => {
  if(data.result == 'success'){
    const orderId = data.orderId
    Swal.fire({
        text: "Order placed",
        icon: 'success',									
        showCancelButton: false,
        showCloseButton: false,
        showConfirmButton:false,
        showLoaderOnConfirm: false,
        timer: 3000
      }).then(()=>{
window.location.href=`/orderConfirmation?id=${orderId}`

      })

  }
}).catch(error=>{
  console.error('error in order placed:',error);
})

}










        //cod anankil
        async function COD(){

await fetch(`/placeOrder?address=${index}&payment=${method}`,{
  method:'GET',
    headers:{
      'Content-Type': 'application/json'
    },
}) .then(response =>{
  if(!response.ok){
    console.log('some error aoccourd by fetching data in order get');
  }
  return response.json()
}).then(data => {
  if(data.result == 'success'){
    const orderId = data.orderId
    Swal.fire({
        text: "Order placed",
        icon: 'success',									
        showCancelButton: false,
        showCloseButton: false,
        showConfirmButton:false,
        showLoaderOnConfirm: false,
        timer: 3000
      }).then(()=>{
window.location.href=`/orderConfirmation?id=${orderId}`

      })

  }
}).catch(error=>{
  console.error('error in order placed:',error);
})

}










        //RAZOR PAY ANANKIL
        async function RazorPay(){
         const response =  await fetch('/razorPay',{
              method:'POST',
              headers:{
                'Content-Type': 'application/json'
              },
              body:JSON.stringify({finalPrice})
            })

            if (!response.ok) {
                                throw new Error('Failed to create order');
                            }

                            const order = await response.json();
                            console.log(order, 'order is showing');
                            const options = {
                                key: 'rzp_test_nPpZYyvi8hdf04',
                                amount: order.amount,
                                currency: order.currency,
                                order_id: order.id,
                                name: 'FLOURISH',
                                description: 'Test Payment',
                                image: 'https://via.placeholder.com/150',
                                handler: function (response) {
                                    Swal.fire({
                                        text: 'Payment Successful! Payment ID: ' + response.razorpay_payment_id,
                                        icon: 'success'
                                    }).then(() => {
                                        razorpaySuccess(response.razorpay_payment_id);
                                    });
                                },
                                prefill: {
                                    name: 'Justin Ram',
                                    email: 'john.doe@example.com',
                                    contact: '1234567890'
                                },
                                theme: {
                                    color: '#528FF0'
                                }
                            };

                            const razorpayInstance = new Razorpay(options);
                            razorpayInstance.open();
        }


        async function razorpaySuccess(payment_id){

          await fetch(`/placeOrder?address=${index}&payment=${method}`,{
            method:'GET',
              headers:{
                'Content-Type': 'application/json'
              },
          }) .then(response =>{
            if(!response.ok){
              console.log('some error aoccourd by fetching data in order get');
            }
            return response.json()
          }).then(data => {
            if(data.result == 'success'){
              const orderId = data.orderId
              Swal.fire({
									text: "Order placed",
									icon: 'success',									
									showCancelButton: false,
									showCloseButton: false,
                  showConfirmButton:false,
									showLoaderOnConfirm: false,
									timer: 3000
								}).then(()=>{
        window.location.href=`/orderConfirmation?id=${orderId}`

                })

            }
          }).catch(error=>{
            console.error('error in order placed:',error);
          })

        }





        function selectAddress(i) {
          index = i;
          console.log('address funcion called!')
        }


        function placeOrder() {

          console.log(method, 'method payment')

          if (index < 0) {
            Swal.fire({
              title: "Please Select!",
              text: "Select the address to proceed!",
              icon: "warning",
              showConfirmButton: false,
              timer: 2000
            });
          }

          else if (method == '') {
            Swal.fire({
              title: "Please Select!",
              text: "Select a payment method!",
              icon: "warning",
              showConfirmButton: false,
              timer: 2000
            });

          }
          else {
            if(method === 'RazorPay'){
              RazorPay()
            }
            else if (method === 'COD' ){
              COD()
            }
            else if (method === 'WALLET'){
              WALLET()
            }

            

          }

          
        }
      </script>











      <script>
        async function applyCoupon(){

          
          const couponCode = document.getElementById('coupon').value
          const subtotal = document.getElementById('cart_total').innerText

          
            fetch('/applyCoupon', {
						method: "POST",
						headers: {
							'Content-Type': "application/json"
						},
						body: JSON.stringify({ couponCode, subtotal })
					})
          .then(response => response.json())
          .then(data => {
							if (data.success) {
								Swal.fire({
									text: "coupon applied",
									icon: 'success',									
									showCancelButton: false,
									showCloseButton: false,
                  showConfirmButton:false,
									showLoaderOnConfirm: false,
									timer: 3000
								});

                console.log("ivideumethi")
								document.getElementById('dicprice').innerText = "-" + data.dicprice
								document.getElementById('cartotal').innerText = data.price
								// document.getElementById('carttotal').value = data.price


              } else {
								Swal.fire({
									text: data.message,
									icon: 'error',
									showCancelButton: false,
									showCloseButton: false,
                  showConfirmButton:false,
									showLoaderOnConfirm: false,
									timer: 3000
								});
							}
						})
						.catch(error => {
							console.error('Error applying coupon:', error);
							// alert('An error occurred while applying the coupon. Please try again.');
						});

                

         

        }
      </script>













      <script>
        // JavaScript validation function here
        function validateAddress() {
          var errors = '';
          var saveas = document.getElementById('saveas').value;
          var fullname = document.getElementById('fullname').value;
          var email = document.getElementById('email').value;
          var adname = document.getElementById('adname').value;
          var street = document.getElementById('street').value;
          var pincode = document.getElementById('pincode').value;
          var city = document.getElementById('city').value;
          var state = document.getElementById('state').value;
          var country = document.getElementById('country').value;
          var mobile = document.getElementById('mobile').value;

          var saveasError = document.getElementById('saveasError');
          var fullnameError = document.getElementById('fullnameError');
          var emailError = document.getElementById('emailError');
          var adnameError = document.getElementById('adnameError');
          var streetError = document.getElementById('streetError');
          var pincodeError = document.getElementById('pincodeError');
          var cityError = document.getElementById('cityError');
          var stateError = document.getElementById('stateError');
          var countryError = document.getElementById('countryError');
          var mobileError = document.getElementById('mobileError');

          saveasError.innerHTML = '';
          fullnameError.innerHTML = '';
          emailError.innerHTML = '';
          adnameError.innerHTML = '';
          streetError.innerHTML = '';
          pincodeError.innerHTML = '';
          cityError.innerHTML = '';
          stateError.innerHTML = '';
          countryError.innerHTML = '';
          mobileError.innerHTML = '';

          var spacesRegex = /^\s*$/; // Regex to check for only spaces

          if (spacesRegex.test(saveas)) {
            saveasError.innerHTML = 'Save as is required.';
            errors += 'Save as is required.\n';
          }
          if (spacesRegex.test(fullname)) {
            fullnameError.innerHTML = 'Full name is required.';
            errors += 'Full name is required.\n';
          }
          if (spacesRegex.test(email)) {
            emailError.innerHTML = 'Email is required.';
            errors += 'Email is required.\n';
          } else if (!email.match(/^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/)) {
            emailError.innerHTML = 'Invalid email address.';
            errors += 'Invalid email address.\n';
          }
          if (spacesRegex.test(adname)) {
            adnameError.innerHTML = 'House name/Flat no is required.';
            errors += 'House name/Flat no is required.\n';
          }
          if (spacesRegex.test(street)) {
            streetError.innerHTML = 'Street is required.';
            errors += 'Street is required.\n';
          }
          if (spacesRegex.test(pincode)) {
            pincodeError.innerHTML = 'Pincode is required.';
            errors += 'Pincode is required.\n';
          } else if (!pincode.match(/^\d{6}$/)) {
            pincodeError.innerHTML = 'Invalid pincode.';
            errors += 'Invalid pincode.\n';
          }
          if (spacesRegex.test(city)) {
            cityError.innerHTML = 'City is required.';
            errors += 'City is required.\n';
          }
          if (spacesRegex.test(state)) {
            stateError.innerHTML = 'State is required.';
            errors += 'State is required.\n';
          }
          if (spacesRegex.test(country)) {
            countryError.innerHTML = 'Country is required.';
            errors += 'Country is required.\n';
          }
          if (spacesRegex.test(mobile)) {
            mobileError.innerHTML = 'Mobile number is required.';
            errors += 'Mobile number is required.\n';
          } else if (!mobile.match(/^\d{10}$/)) {
            mobileError.innerHTML = 'Invalid mobile number.';
            errors += 'Invalid mobile number.\n';
          }

          if (errors) {
            return false;
          } else {
            return true;
          }
        }

        document.getElementById('saveChangesButton').addEventListener('click', function (event) {
          if (!validateAddress()) {
            event.preventDefault();
          }
        });



      </script>

      <!-- order placed  -->
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      

      <script>//DELETE ADDRESS
        function delAddress(id) {
          Swal.fire({
            title: "Are you sure?",
            text: "Are you sure you want to proceed?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
            cancelButtonText: "Cancel",
            dangerMode: true,
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.href = "/checkOutdeleteAddress/" + id;
            } else {
              console.log("User canceled");
            }
          });
        }

      </script>



      <%- include('../partials/footer') %>


  </body>

</html>