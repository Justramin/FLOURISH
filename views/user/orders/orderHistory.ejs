<!DOCTYPE html>
<html lang="en">

<%- include('../partials/head') %>




  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">

  <style>
    /* Basic styling */
    .order {
      border: 1px solid #161515;
      margin-bottom: 20px;
      padding: 10px;
    }

    .order-item {
      display: flex;
      flex-wrap: wrap;
      margin-bottom: 10px;
    }

    .order-item .img-container {
      float: left;
      flex: 0 0 250px;
      max-width: 250px;
    }

    .order-item img {
      width: 100%;
      height: auto;
      border-radius: 20px;
    }

    .order-item .details {
      padding-left: 56px;
      margin-left: 26rem;
      flex: 1;
      padding-left: 20px;
    }

    .cancel-order-button,
    .order-details-button,
    .cancel-product-button,
    .return-order-button {
      padding: 5px 10px;
      margin-right: 10px;
      cursor: pointer;
      color: white;
      border: none;
      border-radius: 6px;
    }

    .cancel-order-button,
    .return-order-button {
      background-color: rgb(233, 49, 49);
    }

    .order-details-button {
      background-color: rgb(40, 177, 74);
    }

    .cancel-product-button {
      background-color: rgb(190, 75, 75);
    }
  </style>

  <body>
    <div class="header--sidebar"></div>

    <%- include('../partials/navbar') %>

      <div class="ps-hero bg--cover" data-background="/user/images/hero/bread-1.jpg">
        <img src="/user/images/hero/contact-us.html" alt="">
        <div class="ps-container">
          <h3>my orders</h3>
          <div class="ps-breadcrumb">
            <ol class="breadcrumb">
              <li><a href="/">Home</a></li>
              <li><a href="/">ACCOUNT PAGE</a></li>
              <li class="active">my orders</li>
            </ol>
          </div>
        </div>
      </div>

      <div class="container">
        <% if (data.length===0) { %>
          <h3 class="p-4 mb-2 text-center font-weight-bold">No Order Found.</h3>
          <div class="continue__btn text-center mb-4">
            <a href="/shop">Continue Shopping</a>
          </div>

          <% } else { %>

            <% for( let i=0; i < data.length; i++ ) { %>


              <div class="order">
                <!-- Order Item -->
                <div class="card-header mb-4 p-3 text-center font-weight-bold"
                  style="background-color: #FFF2D7; border-radius: 50px;">
                  <h4>Order ID: <%= data[i].orderID %>
                  </h4>
                </div>

                <div class="m-2 mt-4 text-center">
                  <% if (data[i].status=='Pending' ) { %>
                    <!-- <h4 class="font-weight-bold">"Move To The Order Details Page To Make a Payment."</h4> -->
                    <% } %>
                </div>

                <div class="order-item row">
                  <% for( let j=0; j < data[i].products.length; j++ ) { %>


                    <div class="col-12 col-md-6 mb-5 d-flex" style="margin-bottom: 40px;">
                      <div class="img-container">
                        <img style="width: 250px; height: 210px;" src="/uploads/<%= data[i].products[j].Image  %>"
                          alt="Item Picture" class="img-fluid">
                      </div>
                      <div class="details">

                        <p class="font-weight-bold" style="font-weight: bold;">Item Name: <%=
                            data[i].products[j].productName %>
                        </p>

                        <p style="font-weight: bold;">Amount: â‚¹ <%= data[i].products[j].price ?
                            data[i].products[j].price : 'N/A' %>
                        </p>
                        <p>Status: <span class="font-weight-bold">
                            <%= data[i].products[j].status %>
                          </span></p>

                        <p>Delivery Address: <%= data[i].address.name %>, <%= data[i].address.housename %>, <%=
                                data[i].address.city %>, <%= data[i].address.mobile %>
                        </p>

                        <p>Quantity: <%= data[i].products[j].quantity ? data[i].products[j].quantity : 'N/A' %>
                        </p>
                        <% if (data[i].products[j].status=='Cancelled') { %>
                          <p style="color: red; font-weight: bold;">product cancelld!</p>

                        <% } else if (data[i].products[j].status=='ReturnConform') { %>
                            <p style="color: red; font-weight: bold;">Product Return Complete!</p>

                        <% } else if (data[i].products[j].status=='ReturnNotConform') { %>
                          <p style="color: red; font-weight: bold;">product cannot be returned!</p>

                        <% } else if (data[i].products[j].status=='Delivered') { %> 
                          <p style="color: rgb(7, 148, 43); font-weight: bold;">product Delivered!</p> 
                          <% } %>







                            <a class="btn btn-success" href="/orderTracking/<%= data[i].orderID %>/<%= j %>">
                              PRODUCT ORDER DETAIL
                            </a>






                      </div>
                    </div>
                    <% } %>
                </div>

                <!-- End of Order Item -->

                <!-- Buttons -->


                <% if (data[i].paymentMethod !=='COD' || data[i].status !=='Pending' ) { %>
                  <button class="order-details-button">
                    <a href="/invoice/<%= data[i].orderID  %>">Invoice</a>
                  </button>
                  <% } %>







                  <% if (data[i].status =='payment Failed') { %>
                    <button style="background-color:  rgb(235, 204, 5); color: #161515;" class="order-details-button">
                      <a onclick="RazorPay('<%= data[i].totalOrderValue  %>','<%= data[i].orderID %>')" >Retry Payment</a>
                    </button>
                    <% } %>






                    
                    <% if (data.return && data.return.length> 0 && data.return[0].status) { %>
                      <span class="bg-warning p-2 rounded font-weight-bold">
                        Return Status: <%= data.return[0].status %>
                      </span>
                      <% } else if (data.status==='Delivered' && new Date(data.updated.getTime() + 5 * 24 * 60 * 60 * 1000)>= new Date()) { %>
                        <button class="return-order-button" onclick="confirmReturnOrder('<%= data._id %>')">
                          Return Order
                        </button>
                        <% } %>
                          <!-- End of Buttons -->

              </div>
              <% } %>
                <% } %>
      </div>






      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

      <script>
        function confirmCancelProduct(orderId, productId) {
          if (confirm("Are you sure you want to cancel this product?")) {
            window.location.href = `/itemCancel/${orderId}/${productId}`;
          } else {
            console.log("User canceled");
          }
        }
      </script>

      <script>
        function confirmCancelOrder(itemId) {
          Swal.fire({
            title: "Are you sure?",
            text: "Are you sure you want to proceed?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Confirm",
            cancelButtonText: "Cancel",
            dangerMode: true,
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.href = itemId;
            } else {
              console.log("User canceled");
            }
          });
        }
      </script>

      <script>
        function confirmReturnOrder(itemId) {
          Swal.fire({
            title: 'Order Return',
            input: 'text',
            inputPlaceholder: 'Enter your Reason',
            showCancelButton: true,
            confirmButtonText: 'Submit',
            cancelButtonText: 'Cancel',
            inputValidator: (value) => {
              if (!value) {
                return 'You need to enter something!';
              }
            }
          }).then((result) => {
            if (result.isConfirmed) {
              const inputValue = result.value;
              $.ajax({
                url: '/Return_Reason',
                method: 'POST',
                data: { itemId: itemId, reason: inputValue },
                success: function (response) {
                  Swal.fire('Submitted!', `Your reason has been submitted.`, 'success');
                  setTimeout(function () {
                    location.reload();
                  }, 1000);
                },
                error: function (xhr, status, error) {
                  Swal.fire('Error!', `Failed to send data: ${error}`, 'error');
                }
              });
            }
          });
        }
      </script>




      <!-- CANCEl A SINGLE PRODUCT -->

      <script>
        function confirmCancelProduct(orderId, productId) {
          if (confirm("Are you sure you want to cancel this product?")) {
            window.location.href = `/itemCancel/${orderId}/${productId}`;
          } else {
            console.log("User canceled");
          }
        }
      </script>

      <script>
        function cancelProduct(orderID, index) {
          console.log(orderID);
          console.log(index);

          Swal.fire({
            title: "Are you sure?",
            text: "You want to cancel the product",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Cancel it!"
          }).then((result) => {
            window.location.href = `/cancelProducts?id=${orderID}&&i=${index}`
          });

        }
      </script>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>



<script>


  //RAZOR PAY ANANKIL
  async function RazorPay(finalPrice,orderID){

        
         const response =  await fetch('/razorPay',{
              method:'POST',
              headers:{
                'Content-Type': 'application/json'
              },
              body:JSON.stringify({finalPrice})
            })

            if (!response.ok) {
                                throw new Error('Failed to create order');
                            }

                            const order = await response.json();
                            console.log(order, 'order is showing');
                            const options = {
                                key: 'rzp_test_nPpZYyvi8hdf04',
                                amount: order.amount,
                                currency: order.currency,
                                order_id: order.id,
                                name: 'FLOURISH',
                                description: 'Test Payment',
                                image: 'https://via.placeholder.com/150',
                                handler: function (response) {
                                    Swal.fire({
                                        text: 'Payment Successful! Payment ID: ' + response.razorpay_payment_id,
                                        icon: 'success'
                                    }).then(() => {
                                        razorpaySuccess(response.razorpay_payment_id,orderID);
                                    });
                                },
                                prefill: {
                                    name: 'Justin Ram',
                                    email: 'john.doe@example.com',
                                    contact: '1234567890'
                                },
                                theme: {
                                    color: '#528FF0'
                                }
                            };

                //             const razorpayInstance = new Razorpay(options);
                //             razorpayInstance.on('payment.failed', function (response) {
                //     Swal.fire({
                //         title: 'Payment Failed',
                //         text: 'There was an error processing your payment. Redirecting to order history...',
                //         icon: 'error',
                //         timer: 3000,
                //         timerProgressBar: true,
                //         showConfirmButton:false,
                //         willClose: () => {
                //             // location.href = '/retryPayment';
                //             razorpayFailed()
                //         }
                //     });
                // });
                // razorpayInstance.open();

                //             razorpayInstance.open();
                const razorpayInstance = new Razorpay(options);
                razorpayInstance.open();
        }
        




        async function razorpaySuccess(payment_id,orderID){

await fetch(`/placeOrderFailedToSuccess?orderId=${orderID}`,{
  method:'GET',
    headers:{
      'Content-Type': 'application/json'
    },
}) .then(response =>{
  if(!response.ok){
    console.log('some error aoccourd by fetching data in order get');
  }
  return response.json()
}).then(data => {
  if(data.result == 'success'){
    const orderId = data.orderId
    Swal.fire({
        text: "Order placed",
        icon: 'success',									
        showCancelButton: false,
        showCloseButton: false,
        showConfirmButton:false,
        showLoaderOnConfirm: false,
        timer: 3000
      }).then(()=>{
window.location.href=`/orderConfirmation?id=${orderId}`

      })

  }
}).catch(error=>{
  console.error('error in order placed:',error);
})

}








</script>

      <%- include('../partials/footer') %>


  </body>

</html> -->




 